#labels Featured
=Getting Started=

Setting up a development environment is now easy thanks to our use of
`zc.buildout` ( http://python.org/pypi/zc.buildout )

`zc.buildout` is a framework for creating repeatable installs, and is in
widespread use in the Zope3 and Plone 3 communities. It installs Zope,
Plone, all the getpaid products, the requisite python libraries, and
setups an instance that's usable out of the box for development.

==To Get Started==

Get your GoogleCode password to check out the code (you will need to log into a Google account and go to http://code.google.com/hosting/settings to your SVN password).

Checkout the getpaid.buildout infrastructure. Make sure you check it out to a location outside of any existing Zope instances.

{{{
svn co https://getpaid.googlecode.com/svn/trunk/getpaid.buildout
}}}

Note that we really mean the commandline `svn` client; if you use a GUI client, make sure it correctly supports svn:externals. For example, `rapidsvn` prior to 0.9.4 does *not*.

Run the buildout bootstrap script using a python interpreter that Zope likes (for example, `python2.4`):

{{{
cd getpaid.buildout
python2.4 bootstrap.py
}}}


Before continuing, make certain you have a working C toolchain installed. In Debian and derivatives, the easiest way is to `apt-get install build-essential`.

This creates a few directories used by buildout. Then run:

{{{
bin/buildout -v
}}}

The -v isn't necessary, but may make you feel better in the knowledge that
a lot is going on.

This will take a long time and use up to 200Mb of disk space. It will:

  * Create the 'parts' directory
  * Create a directory var where your Data.fs will live.
  * Download a Zope 2 tarball into parts/zope2.
  * Build Zope 2, using 'setup.py build_ext -i'
  * Build a Zope 2 instance in parts/instance
  * Install Plone 2.5's products into the Zope 2 instance
  * Setup the GetPaid Product/Package suite for Plone
  * Remove the Zope egg files

If you've done this once, see "Updating the buildout" below.

To start Zope 2, you can now do:

{{{
bin/instance fg
}}}

By default, the ZMI adminisration username/password is admin/admin.

== Installing the product ==

Create a Plone site within your zope instance. Go to site setup. Install the GetPaid product. It is not necessary to install the other products listed. 

== Debugging and testing ==

If you wish to have an interactive python prompt that has all the packages
Zope is aware of, e.g. for testing purposes, you can run:

{{{
bin/zopepy
}}}

== Updating the buildout ==

The caveat is that if you try to update your buildout on subsequent
buildouts, you'll need to either pass the `-N` commandline option to
buildout

{{{
./bin/buildout -N
}}}

or you'll need to remove all zope prefixed eggs from the eggs
directory before starting zope.

This is because by default it will try to pickup the latest eggs
available satisfying some Zope dependencies (unfortunately the Zope
2.9 libraries aren't formatted as eggs so we use those libraries
directly to satisfy these dependencies ).

Question: can the buildout be updated via svn up? TBD. 


== Troubleshooting ==

=== Errors during checkout ===

The initial checkout takes a long time, connects to a multitude of servers, and in general has several interesting ways it can fail. If it does, just enter the `getpaid-buildout` directory and do an `svn up`:

{{{
cd getpaid-buildout
svn up
}}}

the svn fu will continue where it left off.

Installation of the product may appear to hang. Try starting Zope in debug mode using ./zopectl fg. There's an installed product called PDBDebugMode that brings up a Python Debugger prompt whenever there's an error (which is why it looks like it's freezing).
When you're running in debug mode, you'll see a prompt appear in your
terminal window. Just hit 'r' (sometimes several times) to continue. If in doubt, stop your Zope instance and restart it.

=== 

=== AccessControl/cAccessControl ===
{{{
internal error occured due to a bug in either zc.buildout or in a recipe being used:
AccessControl/cAccessControl.c:2312: error: ‘PROBLEM’ undeclared (first use in this function)
}}}

Seems to be caused by using the wrong version of Python. You can correct this by providing the full path to Python2.4 when running bootstrap.py

{{{
/path/to/python24/python bootstrap.py
}}}

You may need to install PIL to make it run:

http://www.pythonware.com/products/pil/